name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
        
    - name: Inject EmailJS configuration
      run: |
        echo "🔑 Injecting EmailJS configuration..."
        
        # Verify secrets exist
        test -n "${{ secrets.EMAILJS_SERVICE_ID }}"  || (echo "❌ Missing EMAILJS_SERVICE_ID" && exit 1)
        test -n "${{ secrets.EMAILJS_TEMPLATE_ID }}" || (echo "❌ Missing EMAILJS_TEMPLATE_ID" && exit 1)
        test -n "${{ secrets.EMAILJS_PUBLIC_KEY }}"  || (echo "❌ Missing EMAILJS_PUBLIC_KEY"  && exit 1)

        # Create EmailJS secrets file
        mkdir -p config
        cat > config/email-secrets.js << 'EOF'
        // EmailJS configuration - injected by GitHub Actions
        // This file is generated during deployment and should not be committed
        window.EMAIL_CONFIG = {
          EMAILJS_SERVICE_ID:  "${{ secrets.EMAILJS_SERVICE_ID }}",
          EMAILJS_TEMPLATE_ID: "${{ secrets.EMAILJS_TEMPLATE_ID }}",
          EMAILJS_PUBLIC_KEY:  "${{ secrets.EMAILJS_PUBLIC_KEY }}"
        };
        EOF
        
        echo "✅ EmailJS configuration created"
        echo "📋 Preview:"
        head -5 config/email-secrets.js

    - name: Cache-bust scripts
      run: |
        echo "🔄 Adding cache-busting..."
        sed -i "s/__BUILD__/${{ github.run_number }}/g" index.html
        echo "✅ Cache-busting applied"
    
    - name: Prepare site for deployment
      run: |
        echo "📦 Preparing site for deployment..."
        
        # Create clean build directory
        mkdir -p _site
        
        # Copy all files to _site
        rsync -av --exclude='_site' --exclude='.git' --exclude='.github' --exclude='node_modules' . _site/
        
        # Verify critical files exist
        echo "🔍 Verifying build..."
        
        if [ ! -f "_site/index.html" ]; then
          echo "❌ index.html missing from build"
          exit 1
        fi
        
        if [ ! -f "_site/config/email-secrets.js" ]; then
          echo "❌ email-secrets.js missing from build"
          exit 1
        fi
        
        if [ ! -f "_site/config/email-config.js" ]; then
          echo "❌ email-config.js missing from build"  
          exit 1
        fi
        
        echo "✅ Build verification passed"
        echo "📁 Site contents:"
        find _site -name "*.js" | grep -E "(email|config)" | sort

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Verify deployment
      run: |
        echo "🚀 Deployment completed!"
        echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
        
        # Wait a bit for deployment to propagate
        echo "⏳ Waiting for deployment to propagate..."
        sleep 15
        
        # Test key files
        echo "🧪 Testing deployed files..."
        
        if curl -f -s "https://portfolio.theguywiththedogs.dev/config/email-secrets.js" > /dev/null; then
          echo "✅ email-secrets.js is accessible"
        else
          echo "❌ email-secrets.js is NOT accessible"
        fi
        
        if curl -f -s "https://portfolio.theguywiththedogs.dev/config/email-config.js" > /dev/null; then
          echo "✅ email-config.js is accessible"
        else
          echo "❌ email-config.js is NOT accessible"
        fi
        
        echo "🎉 Deployment verification complete!"