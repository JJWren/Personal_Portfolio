name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        if [ -f package.json ]; then
          npm install
        fi
        
    - name: Inject EmailJS Configuration
      run: |
        echo "=== EmailJS Configuration Injection ==="
        echo "Checking secrets availability..."
        
        if [ -z "$EMAILJS_SERVICE_ID" ]; then
          echo "❌ EMAILJS_SERVICE_ID is missing"
          exit 1
        else
          echo "✅ EMAILJS_SERVICE_ID is available (length: ${#EMAILJS_SERVICE_ID})"
        fi
        
        if [ -z "$EMAILJS_TEMPLATE_ID" ]; then
          echo "❌ EMAILJS_TEMPLATE_ID is missing"
          exit 1
        else
          echo "✅ EMAILJS_TEMPLATE_ID is available (length: ${#EMAILJS_TEMPLATE_ID})"
        fi
        
        if [ -z "$EMAILJS_PUBLIC_KEY" ]; then
          echo "❌ EMAILJS_PUBLIC_KEY is missing"
          exit 1
        else
          echo "✅ EMAILJS_PUBLIC_KEY is available (length: ${#EMAILJS_PUBLIC_KEY})"
        fi
        
        echo "Creating configuration injection..."
        
        # Create the configuration injection using echo commands
        echo "Creating configuration injection..."
        
        # Replace the email-secrets.js file with actual configuration
        echo "Creating email-secrets.js with actual configuration..."
        cat > config/email-secrets.js << 'EOF'
// EmailJS configuration - generated by GitHub Actions
window.EMAIL_CONFIG = {
    EMAILJS_SERVICE_ID: 'PLACEHOLDER_SERVICE_ID',
    EMAILJS_TEMPLATE_ID: 'PLACEHOLDER_TEMPLATE_ID',
    EMAILJS_PUBLIC_KEY: 'PLACEHOLDER_PUBLIC_KEY'
};
EOF
        
        # Replace placeholders with actual values
        sed -i "s/PLACEHOLDER_SERVICE_ID/$EMAILJS_SERVICE_ID/g" config/email-secrets.js
        sed -i "s/PLACEHOLDER_TEMPLATE_ID/$EMAILJS_TEMPLATE_ID/g" config/email-secrets.js
        sed -i "s/PLACEHOLDER_PUBLIC_KEY/$EMAILJS_PUBLIC_KEY/g" config/email-secrets.js
        
        echo "Generated email-secrets.js:"
        cat config/email-secrets.js
        
        # Verify configuration file was created successfully
        if [ -f "config/email-secrets.js" ] && grep -q "window.EMAIL_CONFIG" config/email-secrets.js; then
          echo "✅ EmailJS configuration file created successfully!"
          echo "Configuration preview:"
          head -5 config/email-secrets.js
        else
          echo "❌ Failed to inject configuration"
          echo "Current EmailJS script line:"
          grep -n "emailjs/browser" index.html
          exit 1
        fi
      env:
        EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
        EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
        EMAILJS_PUBLIC_KEY: ${{ secrets.EMAILJS_PUBLIC_KEY }}
    
    - name: List files to be deployed
      run: |
        echo "=== Files that will be deployed ==="
        find . -type f -not -path "./.git/*" | head -20
        echo "=== Checking specific files ==="
        ls -la favicon.ico || echo "favicon.ico not found"
        ls -la images/ || echo "images directory not found"
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        keep_files: false
        force_orphan: true
